Vue Study : https://www.onlineinterviewquestions.com/vue-js-interview-questions/#question1

1. WHat is vue
    - progressive js script used to create UI's

2. Features of vue:
    - Templates
    - Reactivity 
    - Components
    - Transitions
    - Routing

3. Life Cycle: 
    1. beforeCreate()
    2. create()
    3. beforeMount()
    4. mounted()
    5.  beforeDestroy()
    6. destroyed()



4. create new instance of vue
    var vm = new Vue({
        //options
    })

5. explain the difference between one-way data flow and two way binding
    - one way data flow, part of the application does not update automatically when data Model is changed, we need to wriste custom code to make it updated every time a data model is changed. in vue use v-bind for one way data flow or binding
    - in 2 way data binding the vue part of the application automatically updates when the data Model is changed. v-model directive is used for 2 way data binding

6. How to create 2 way bindings in vuejs
    - v-model directive is used to create 2 way bindings. 
    <div id="app">
        {{ message }}
        <input v-model="message">
    </div>
    <script type="text/javascript">
    var message = 'Vue.js is rad';
    new Vue({el: '#app', data: {message} })
    </script>

7. what are filters in vue.js
    - basically a filter that will process value before outputting it.
    - denoted with single pipe (|)
    <element directive="expression | filterId [args...]"></element>

    - in vue 2.0 there are no filters available, you would have to make your own.

8. how to create that custom filter with vue2.0 
    - vue.filter() method is used to create and register a custom filter in vue.js method takes two parameters
    param 1 : filterId
    param 2 : function that takes in arg to then do what you want
    vue.filter('reverse', function(value) {
        return value.split('').reverse().join('')
    })

9. What are components in vue.js? how to register a component inside other component
    Vue Components are powerful features of vue.js that  encapsulate reusable code im html

    export default {
        el: '#your-element',
        components: {
            'your-component'
        }
    }

10. What are Directives in Vue.js? 
    - in vue.js directives provides a way to extend HTML with new attributes and tags. vue.js has a set of built-in directives which offers extended]
    functionality to apps.
    examples: 
        - v-show
        - v-if
        - v-model 
        - v-else
        - v-on

11. List types of Directives available in vue.js
    1. General Directives
    2. Literal Directives
    3. Empty Directives
    4. Custom Directives

12. what is a vue Resource, how can we install a Resource
    - VUE-resource is a plugin for vue.js that provides services for making web requests and handle responses using XMLHttpRequest or JSONP
    - install: npm install vue-resource

13. How to create Constants in Vue.js
    - suggested to create a separate file for defining Constants

    Creating a Constant in Vue js
    export const SITE_URL = 'https://www.onlineinterviewquestions.com';

    Importing a Constant in vue.js
    import {SITE_URL} from './path/to/constants.js';

14. What is virtual DOM in Vue.js
    Virtual DOM in vue is a JS object that represents the DOM.
    - the application updates Virtual DOM instead of DOM directly so minimizes the cost in the real DOM since it is expensive
    - Virtual DOM offers the ability to control the timing at which the Virtual DOM is rendered.
    - Virtual DOM will just maintain the state of the data with out re-rendering until you choose
    - also helps increase performance of web apps

15. Why we need Vue.js mixins?
    - chunk of defined logic that is stored in particular way. it can be re-used over and over to add functionality to your Vue instances
    and components. It is important because
        1. DRY Principles
        2. you get flexibility with mixins
        3. mixins are safe and they do not affect changes outside of their defined scope
        4. mixins in vue js are a great platofmr for code reusability 

16. What is Vuex?
    - state management pattern and library for the application using vue.js it acts a central store for
    all of the different components in your app. it has rules to ensure that the state can be only mutated in a predictable fashion
    - it can be integrated with the official devtool extension of Vue to provide additional features. Vuex mainly helps in dealing with shared state management with the cost of more concepts and boilerplate

17.what are filters in Vuejs
    - applies to common text formatting. it is uses in two places, mustache and interpolations, and v-bind expressions. Mainly filters the data on the DOM level. 
    - you get to keep state of data in the store but it just visually manipulates it. 

18. How to create a component in Vue?
    - they have their own state, markup and style
    
    4 ways:
    - the First is new Vue({/*options*/})
    - the second is VUe.component('component-name', {
        //options
    })
    - using local components
    - the fourth is in the .vue files or single files components


19. how to import js file into Vue component?
    2 ways of importing a library to the vue component

        1. The first is to import a local JavaScript library. Here, you can import the JavaScript library by using the 'import' keyword inside the script tag of your Vue file.
            import * as mykey from '../assets/js/mykey.js';

        2.  The second way is to include your external JavaScript file into the mounted hook of your Vue component.


20. how to call rest API from vue.js
    We can use various HTTP libraries to call REST Api's from Vue JS. One of the popular libraries is Axios. It simple to use and lightweight. To include it in your project, execute the following command.

    npm install axios --save

    implementation: 
    axios({method:'GET' , "URL" : "https://httpbin.or"
                this.ip =result.data.origin;
            }, error => {
                console.error(error)
            })