SOLID Principles of Object Oriented Programming

S - Single-responsiblity principle

	- Code smell is when you run into issues where you can't use your code again and have to refactor
	- You would loop ove


O - Open-closed principle

	- if you have a class it should be open for extension but closed from modification

L - Liskov substitution principle

	- Objects must be replacable by instances of their subtyoes without altering the correct functioning of our sytem

I - Interface segregation principle

	- A client should never be forced to implement an interface that it doesn't use or clients shouldn't be forced to depend on methods they do not use.

D - Dependency Inversion Principle

	- Entities must depend on abstractions not on concretions. It states that the high level module must not depend on the low level module, but they should depend on abstractions.